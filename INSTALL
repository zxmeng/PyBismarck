--------------------------------------------------------------------------
1. Dependencies
--------------------------------------------------------------------------
Required:
	DBMS Installation (Postgresql or Greenplum)

Optional: (required for python interface)
	Python 2.* (tested on >= 2.6)
	Psycopg2 (tested on >= 2.4)

--------------------------------------------------------------------------
2. Environment Variables
--------------------------------------------------------------------------
a. Adjust the settings in bismarck.path according to comments
b. source bismarck.path

--------------------------------------------------------------------------
3. Install
--------------------------------------------------------------------------
Simply run,
	make pg 2>> install.err
	make install-pg 2>> install.err
or,
	make gp 2>> install.err
	make install-gp 2>> install.err

If no "ERROR" is prompted in install.err, the installation has successfully
completed. Congratulation!

--------------------------------------------------------------------------
4. Load test data
--------------------------------------------------------------------------
Run each sql file in bismarck_data,
	psql -f mlens1m.sql
	psql -f dblife.sql
	psql -f forest.sql
	psql -f conll.sql

--------------------------------------------------------------------------
5. Test if Bismarck is running
--------------------------------------------------------------------------
Using SQL, check if the output loss value is decreasing and within correct
range as is shown below after the first several epochs:
	SELECT dense_logit('forest', 1, 54); 				-- (2.9e5, 4e5)
	SELECT sparse_logit('dblife', 22, 41270);			-- (2.7e3, 4e3)
	SELECT factor('mlens1m', 333, 6040, 3952, 10);		-- (0.7, 1.0)
	SELECT crf('conll', 4444, 7448606, 22, 19, 1); 		-- (0.0, 5e4)

Using Python, same checking as using SQL:
	cd bin
	python bismarck_front.py dense-logit-spec.py
	python bismarck_front.py sparse-logit-spec.py
	python bismarck_front.py factor-spec.py
	python bismarck_front.py crf-spec.py

